help("person")
help("write.table")
getwd()
ls()
dir()
devtools::load_all(".")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(ForceAtlas2)
help("layout.forceatlas2")
devtools::check()
rm(list=ls())
load("D:/Mis proyectos/R twitter/Followers.Rdata")
data
load("D:/Mis proyectos/R twitter/Followers.Rdata")
g <- graph.data.frame(data, directed=TRUE, vertices=NULL)
g <- igraph::graph.data.frame(data, directed=TRUE, vertices=NULL)
g
layout.forceatlas2(g, iterations=1000, plotstep=500)
layout.forceatlas2(g, iterations=100, plotstep=10)
library(ForceAtlas2)
load("D:/Mis proyectos/R twitter/Followers.Rdata")
g <- igraph::graph.data.frame(data, directed=TRUE, vertices=NULL)
layout.forceatlas2(g, iterations=100, plotstep=10)
layout.forceatlas2(g, iterations=100, plotstep=10)
library(ForceAtlas2)
layout.forceatlas2(g, iterations=100, plotstep=10)
data(lesmis)
igraph::miserables
igraph::miserables()
library(igraph)
help(igraph)
nexus.list(limit=3, order="name")
nexus.info(2)
help(nexus.get)
nexus.list(limit=3, order="name")[[1]]
nexus.info(1)
nexus.info(3)
nexus.list(limit=3)
nexus.list()
nexus.list(limit=50)
nexus.info(6)
nexus.search("miserables")
nexus.get("miserables")
g <- nexus.get("miserables")
g <- nexus.get("miserables")
layout.forceatlas2(g, iterations=100, plotstep=10)
layout.forceatlas2(g, iterations=1000, plotstep=10)
layout.forceatlas2(g, iterations=1000, plotstep=10, plotlabels=FALSE)
layout.forceatlas2(g, iterations=10000, plotstep=100, plotlabels=FALSE)
layout.forceatlas2(g, iterations=2000, plotstep=50, plotlabels=FALSE)
layout.forceatlas2(g, iterations=2000, plotstep=100, plotlabels=FALSE)
layout.forceatlas2(g, iterations=2000, plotstep=100, plotlabels=FALSE)
layout.forceatlas2(g, iterations=2000, plotstep=100, plotlabels=FALSE)
layout.forceatlas2(g, iterations=2000, plotstep=100, plotlabels=FALSE)
layout.forceatlas2(g, iterations=2000, plotstep=100, plotlabels=FALSE)
layout.forceatlas2(g, iterations=2000, plotstep=100, plotlabels=TRUE)
layout.forceatlas2(g, iterations=2000, plotstep=100, plotlabels=TRUE)
layout.forceatlas2(g, iterations=2000, plotstep=100, plotlabels=TRUE)
class(g)
g <- igraph::graph.data.frame(data, directed=TRUE, vertices=NULL)
layout.forceatlas2(g, iterations=2000, plotstep=100, plotlabels=TRUE)
layout.forceatlas2(g, iterations=2000, plotstep=10, plotlabels=TRUE)
data
data2 <- data
data2$weights <- 1
data2$weights
data2 <- data
data2$weights <- 1
data
data2$weights[4727:4028] <- 3
data2$weights[4727:4028]
data2$weights[3727:4028]
data2$weights[3727:4028] <- 3
data2
tail(data2)
g <- igraph::graph.data.frame(data, directed=TRUE, vertices=NULL)
layout.forceatlas2(g, iterations=2000, plotstep=10, plotlabels=TRUE)
g <- igraph::graph.data.frame(data, directed=TRUE, vertices=NULL)
g2 <- igraph::graph.data.frame(data2, directed=TRUE, vertices=NULL)
g
g2
layout.forceatlas2(g2, iterations=500, plotstep=10, plotlabels=TRUE)
help("layout.forceatlas2")
a <- layout.forceatlas2(g, iterations=1000, plotstep=10, plotlabels=TRUE)
a <- layout.forceatlas2(g, iterations=1000)
a2 <- layout.forceatlas2(g2, iterations=1000)
a
plot(a)
plot(a2)
plot(a)
plot(a2)
plot(a)
plot(a2)
plot(a)
plot(a2)
V(g)
edge.attributes(g)
edge.attributes(g2)
A <- igraph::get.adjacency(g, type="both",
attr=NULL, edges=FALSE, names=TRUE,
sparse=FALSE)
A2 <- igraph::get.adjacency(g2, type="both",
attr=NULL, edges=FALSE, names=TRUE,
sparse=FALSE)
all.equal(A,A2)
#Amos no me jodas
A[1:10,1:10]
nrow(A)
A
A[1:10,1:10]
A[50:60,50:60]
which(rownames(A)=="adolfoalvarez")
A[556,]
A[550:556,550:556]
dim(A)
isSymmetric(A[550:556,550:556])
g <- igraph::graph.data.frame(data, directed=FALSE, vertices=NULL)
data
data2
g2 <- igraph::graph.data.frame(data2, directed=FALSE, vertices=NULL)
A <- igraph::get.adjacency(g, type="both",
attr=NULL, edges=FALSE, names=TRUE,
sparse=FALSE)
A2 <- igraph::get.adjacency(g, type="both",
attr=NULL, edges=FALSE, names=TRUE,
sparse=FALSE)
A[550:556,550:556]
A2[550:556,550:556]
all.equal(A,A2)
help(get.adjacency)
edge.attributes(g2)
class(edge.attributes(g2))
names(edge.attributes(g2))
A2 <- igraph::get.adjacency(g2, type="both",
attr="weights", edges=FALSE, names=TRUE,
sparse=FALSE)
A <- igraph::get.adjacency(g, type="both",
attr="weights", edges=FALSE, names=TRUE,
sparse=FALSE)
A <- igraph::get.adjacency(g, type="both",
attr=NULL, edges=FALSE, names=TRUE,
sparse=FALSE)
all.equal(A,A2)
A[550:556,550:556]
A2[550:556,550:556]
isSymmetric(A2)
isSymmetric(A)
#ok
g2 <- igraph::graph.data.frame(data2, directed=TRUE, vertices=NULL)
A2 <- igraph::get.adjacency(g2, type="both",
attr="weights", edges=FALSE, names=TRUE,
sparse=FALSE)
isSymmetric(A2)
A2[550:556,550:556]
#Vale entonces
edge.attributes(g2)
names(edge.attributes(g2))
names(edge.attributes(g))
A2 <- igraph::get.adjacency(g2, type="both",
attr=NULL, edges=TRUE, names=TRUE,
sparse=FALSE)
A2
g
g <- igraph::graph.data.frame(data, directed=FALSE, vertices=NULL)
g <- igraph::graph.data.frame(data, directed=FALSE, vertices=NULL)
A <- igraph::get.adjacency(g, type="both",
attr=names(edge.attributes(g)), edges=FALSE, names=TRUE,
sparse=FALSE)
A
A2[550:556,550:556]
g <- igraph::graph.data.frame(data, directed=FALSE, vertices=NULL)
A <- igraph::get.adjacency(g, type="both",
attr=NULL, edges=FALSE, names=TRUE,
sparse=FALSE)
A[550:556,550:556]
isSymmetric(A)
g <- igraph::graph.data.frame(data, directed=TRUE, vertices=NULL)
A <- igraph::get.adjacency(g, type="both",
attr=NULL, edges=FALSE, names=TRUE,
sparse=FALSE)
isSymmetric(A)
A[550:556,550:556]
g <- igraph::graph.data.frame(data, directed=TRUE, vertices=NULL)
A <- igraph::get.adjacency(g, type="both",
attr=NULL, edges=FALSE, names=TRUE,
sparse=FALSE)
A[550:556,550:556]
isSymmetric(A)
g <- igraph::graph.data.frame(data, directed=FALSE, vertices=NULL)
A <- igraph::get.adjacency(g, type="both",
attr=NULL, edges=FALSE, names=TRUE,
sparse=FALSE)
isSymmetric(A)
A[550:556,550:556]
names(edge.attributes(g))
g <- igraph::graph.data.frame(data, directed=TRUE, vertices=NULL)
A <- igraph::get.adjacency(g, type="both",
attr=names(edge.attributes(g)), edges=FALSE, names=TRUE,
sparse=FALSE)
g2 <- igraph::graph.data.frame(data, directed=TRUE, vertices=NULL)
A2 <- igraph::get.adjacency(g2, type="both",
attr=names(edge.attributes(g)), edges=FALSE, names=TRUE,
sparse=FALSE)
isSymmetric(A)
isSymmetric(A2)
A[550:556,550:556]
A2[550:556,550:556]
g <- igraph::graph.data.frame(data, directed=TRUE, vertices=NULL)
A <- igraph::get.adjacency(g, type="both",
attr=names(edge.attributes(g)), edges=FALSE, names=TRUE,
sparse=FALSE)
g2 <- igraph::graph.data.frame(data2, directed=TRUE, vertices=NULL)
A2 <- igraph::get.adjacency(g2, type="both",
attr=names(edge.attributes(g)), edges=FALSE, names=TRUE,
sparse=FALSE)
isSymmetric(A2)
isSymmetric(A)
A2[550:556,550:556]
A[550:556,550:556]
g <- igraph::graph.data.frame(data, directed=TRUE, vertices=NULL)
A <- igraph::get.adjacency(g, type="both",
attr=names(edge.attributes(g)), edges=FALSE, names=TRUE,
sparse=FALSE)
g2 <- igraph::graph.data.frame(data2, directed=TRUE, vertices=NULL)
A2 <- igraph::get.adjacency(g2, type="both",
attr=names(edge.attributes(g2)), edges=FALSE, names=TRUE,
sparse=FALSE)
isSymmetric(A)
isSymmetric(A2)
A[550:556,550:556]
A2[550:556,550:556]
head(data)
head(data2)
data2$w <- data2$weights
data2$weights <- NULL
head(data2)
g2 <- igraph::graph.data.frame(data2, directed=TRUE, vertices=NULL)
names(edge.attributes(g2))
g <- igraph::graph.data.frame(data, directed=TRUE, vertices=NULL)
A <- igraph::get.adjacency(g, type="both",
attr=names(edge.attributes(g)), edges=FALSE, names=TRUE,
sparse=FALSE)
A2[550:556,550:556]
A[550:556,550:556]
g <- igraph::graph.data.frame(data, directed=FALSE, vertices=NULL)
A <- igraph::get.adjacency(g, type="both",
attr=names(edge.attributes(g)), edges=FALSE, names=TRUE,
sparse=FALSE)
A[550:556,550:556]
class(g)
is.igraph(g)
is.igraph(data)
is.data.frame(data)
help("graph.data.frame")
V(g)
V(g)
V(g)$names
names(V(g))
help(V)
V(g)$labels
V(g)$names
V(g)$name
position
g <- data2
if(igraph::is.graph(graph)){
g <- graph
} else{
g <- igraph::graph.data.frame(graph, directed=directed)
}
library(ForceAtlas2)
p <- layout.forceatlas2(data2)
library(ForceAtlas2)
library(ForceAtlas2)
p <- layout.forceatlas2(data2)
library(ForceAtlas2)
p <- layout.forceatlas2(data2, iterations=1000)
a <- layout.forceatlas2(g, iterations=1000)
a2 <- layout.forceatlas2(g2, iterations=1000)
plot(a)
a
a2
#shit
g
dim(g)
a
a2
class(a2)
as.data.frame(a2)
V(g)
V(g2)
cbind(V(g2)$name, position)
cbind(V(g2)$name, a2)
cbind(V(g2)$name, as.data.frame(a2))
data.frame((V(g2)$name, as.data.frame(a2)))
data.frame(name=V(g2)$name)
head(data.frame(name=V(g2)$name))
cbind(data.frame(name=V(g2)$name), as.data.frame(a2))
library(ForceAtlas2)
g <- data2
g
g2
a <- layout.forceatlas2(g, iterations=1000)
a <- layout.forceatlas2(g, iterations=1000, plotstep = 1000)
a2 <- layout.forceatlas2(g2, iterations=1000, plotstep = 1000)
a
a2
a
nnodes <- 556
dim <- 2
difference <- 2000/(nnodes*dim)
pos <- matrix(sample(seq(-1000,1000,difference),nnodes*dim),nnodes,dim)
pos
g <- igraph::graph.data.frame(data, directed=FALSE, vertices=NULL)
g2 <- igraph::graph.data.frame(data2, directed=FALSE, vertices=NULL)
a <- layout.forceatlas2(g, pos=pos, iterations = 1000, plotstep = 1000)
a2 <- layout.forceatlas2(g2, pos=pos, iterations = 1000, plotstep = 1000)
g
g2
g2
a
a2
a
a2
plot(a)
plot(a2)
edge.attributes(g)
edge.attributes(g2)
data2
data2[data2[,3]==3]
data2[data2[,3]==3,]
data2[data2[,3]==3,3]
data2[data2[,3]==3,3] <- 10
g <- igraph::graph.data.frame(data, directed=FALSE, vertices=NULL)
g2 <- igraph::graph.data.frame(data2, directed=FALSE, vertices=NULL)
a2 <- layout.forceatlas2(g2, pos=pos, iterations = 1000, plotstep = 1000)
a
a2
plot(a2)
plot(a)
plot(a2)
plot(a)
plot(a2)
data2[data2[,3]==3,3] <- 50
g <- igraph::graph.data.frame(data, directed=FALSE, vertices=NULL)
g2 <- igraph::graph.data.frame(data2, directed=FALSE, vertices=NULL)
a2 <- layout.forceatlas2(g2, pos=pos, iterations = 1000, plotstep = 1000)
a
a2
plot(a)
plot(a2)
plot(a)
plot(a2)
#Vale, ok
#Me parece bien
nexus.list()
nexus.list(limit=50)
nexus.list(tags='weighted')
nexus.info(21)
devtools::use_vignette("my-vignette")
devtools::use_vignette("ForceAtlas2")
library(igraph)
g <- nexus.get("miserables")
g
layout.forceatlas2(g, iterations=10000, plotstep=500)
layout.forceatlas2(g, iterations=1000, plotstep=100)
layout.forceatlas2(g, iterations=1000, plotstep=100)
layout <- layout.forceatlas2(g, iterations=1000, plotstep=100)
plot(g, layout=layout)
g <- nexus.get("miserables")
layout <- layout.forceatlas2(g, iterations=1000, plotstep=100)
layout <- layout.forceatlas2(g, iterations=1000, plotstep=1000)
nexus.info(21)
nexus.info("miserables")
library(ForceAtlas2)
nexus.get
help(nexus.get)
help(igraph)
library(igraph)
help(igraph)
library(igraph)
g <- nexus.get("miserables")
get.adjlist(g)
get.edgelist(g)
get.adjedgelist(g)
get.data.frame(g)
data <- get.data.frame(g)
head(data,10)
layout.forceatlas2(data, directed=TRUE, iterations = 1000, plotstep = 1000)
data
layout.forceatlas2(data, directed=TRUE, iterations = 1000, plotstep = 1000)
layout.forceatlas2(data, directed=TRUE, iterations = 1000, plotstep = 1000)
library(ForceAtlas2)
library(igraph)
g <- nexus.get("miserables")
layout <- layout.forceatlas2(g, iterations=1000, plotstep=1000)
plot(g, layout=layout)
data <- get.data.frame(g)
dim(data) #The dimension of the data
head(data,10) #We show just the first 10 rows
layout.forceatlas2(data, directed=TRUE, iterations = 1000, plotstep = 1000)
g
layout.forceatlas2(data, directed=TRUE, iterations = 1000, plotstep = 1000)
layout.forceatlas2(g, directed=TRUE, iterations = 1000, plotstep = 1000)
layout.forceatlas2(g, iterations = 1000, plotstep = 50)
layout.forceatlas2(g, iterations = 5000, plotstep = 50)
layout.forceatlas2(g, iterations = 5000, plotstep = 100)
layout.forceatlas2(g, iterations = 5000, plotstep = 100)
layout.forceatlas2(data, iterations = 5000, plotstep = 100)
layout.forceatlas2(data, directed=FALSE, iterations = 5000, plotstep = 100)
layout.forceatlas2(g, iterations = 5000, plotstep = 100)
layout.forceatlas2(data, directed=FALSE, iterations = 5000, plotstep = 100)
layout.forceatlas2(g, iterations = 5000, plotstep = 5000)
layout.forceatlas2(data, directed=FALSE, iterations = 5000, plotstep = 5000)
help("igraph")
is.directed(g)
layout.forceatlas2(data, directed=FALSE, iterations = 5000, plotstep = 5000)
layout.forceatlas2(data, directed=FALSE, iterations = 5000, plotstep = 100)
layout.forceatlas2(data, directed=FALSE, iterations = 2000, plotstep = 50)
layout.forceatlas2(data, directed=FALSE, iterations = 2000, plotstep = 100)
layout.forceatlas2(data, directed=FALSE, iterations = 2000, plotstep = 100)
layout.forceatlas2(data, directed=FALSE, iterations = 2000, plotstep = 100)
layout.forceatlas2(data, directed=FALSE, iterations = 2000, plotstep = 100, dim=3)
help("layout.forceatlas2")
library(ForceAtlas2)
help("layout.forceatlas2")
library(ForceAtlas2)
help(layout.forceatlas2)
library(ForceAtlas2)
help(layout.forceatlas2)
library(ForceAtlas2)
help(layout.forceatlas2)
g <- graph.ring(100)
library(igraph)
g <- graph.ring(100)
plot(layout.forceatlas2(g, iterations=2000, plotstep=10, plotlabels=TRUE))
plot(g, layout=layout.forceatlas2(g, iterations=5000, plotstep=10, plotlabels=TRUE))
g <- graph.ring(50)
plot(g, layout=layout.forceatlas2(g, iterations=1000, plotstep=10, plotlabels=TRUE))
plot(g, layout=layout.forceatlas2(g, iterations=2000, plotstep=10, plotlabels=TRUE))
plot(g, layout=layout.forceatlas2(g, iterations=2000, plotstep=0, plotlabels=TRUE))
library(ForceAtlas2)
help(layout.forceatlas2)
library(igraph)
g <- graph.ring(50)
layout <- layout.forceatlas2(g, iterations=2000, plotstep=100)
layout <- layout.forceatlas2(g, iterations=3000, plotstep=100)
library(ForceAtlas2)
help(layout.forceatlas2)
vignette(ForceAtlas2)
vignette()
library(ForceAtlas2)
browseVignettes("ForceAtlas")
browseVignettes("ForceAtlas2")
library(ForceAtlas2)
devtools::build()
library(ForceAtlas2)
browseVignettes("ForceAtlas2")
library(ForceAtlas2)
browseVignettes("ForceAtlas2")
devtools::build_vignettes()
library(ForceAtlas2)
browseVignettes("ForceAtlas2")
#Pico
